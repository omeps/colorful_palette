#version 450
struct Pixel {
	vec3 color;
	uint mean;
};
layout(std140, binding = 1) buffer PixelSSBO {
   Pixel pixels[];
};
layout(std140, binding = 0) readonly buffer MeansSSBO {
   vec3 means[];
};

layout (push_constant) uniform Constants {
	uint mean_count;
} constants;

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main () {
	uint index = gl_GlobalInvocationID.x;
	uint closest_mean = 0;
	vec3 color = pixels[index].color;
	float distance_to_closest = distance(color, means[0]);
	for (uint i = 1; i < constants.mean_count; i++) {
		float distance_to_mean = distance(color, means[i]);
		if (distance_to_mean < distance_to_closest) {
			closest_mean = i;
			distance_to_mean = distance_to_closest;
		}
	}
	pixels[index].mean = closest_mean;
}
